package com.ajie.wechat.controller;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.ajie.wechat.service.JtContractRevenueApplyService;
import com.ajie.wechat.util.KettleUtil;

import cn.ccccltd.webservice.construction.monthreport.GhxmzxfdWs;
import cn.ccccltd.webservice.construction.monthreport.ReturnMessage;
import cn.ccccltd.webservice.design.monthreport.SjxmzxfdWs;
import cn.ccccltd.webservice.other.monthreport.QtxmzxWs;

@Controller
@RequestMapping(value = "/revenue")
public class JtContractRevenueApplyController {
	
	private final Log logger = LogFactory.getLog(JtContractIntegrateController.class);
	
	@Autowired
	private JtContractRevenueApplyService jtcontractrevenueapplyservice;
	
	/**
	 * 产值数据初始化
	 * @param zzjg
	 * @param datatime	如果值为0时表示初始化组织机构的所有产值
	 * @param contractrevunueapplyid
	 * @return
	 */
	@RequestMapping(value = "/revenueinit/{zzjg}/{jtrecid}/{grouptype}/{contractrevunueapplyid}",method = RequestMethod.GET)
	public String contractRevenueInit(@PathVariable String zzjg,@PathVariable String jtrecid
			,@PathVariable String grouptype,@PathVariable String contractrevunueapplyid){
		//加密认证配置化xml加载
		ApplicationContext ctx = new ClassPathXmlApplicationContext("classpath:cxf-Security.xml");
		//初始化返回值为2 同步失败
		String renturnstr = "2";
		//组织机构不能为空
		if(zzjg == null || "".equals(zzjg)){
			logger.info("组织机构不能为空！");
			return renturnstr;
		}
		if("1".equals(grouptype)){//设计
			//设计月报产值初始化
			cn.ccccltd.webservice.design.monthreport.ReturnMessage sjmess = null;
			SjxmzxfdWs sjxm = (SjxmzxfdWs)ctx.getBean("sjmonthreportclient");
			sjmess = sjxm.queryMonthReportById(zzjg, jtrecid);
			//设计月报产值保存
			jtcontractrevenueapplyservice.sjMonthReportInit(sjmess.getResultList(),jtrecid,contractrevunueapplyid);
		}else if("2".equals(grouptype)){//施工
			//施工月报产值初始化
			ReturnMessage sgmess = null;
			GhxmzxfdWs ghxm = (GhxmzxfdWs)ctx.getBean("sgmonthreportclient");
			sgmess = ghxm.queryMonthReportById(zzjg, jtrecid);
			//施工月报产值保存
			jtcontractrevenueapplyservice.sgMonthReportInit(sgmess.getResultList(),jtrecid,contractrevunueapplyid);
		}else if("4".equals(grouptype)){//其它
			//其它月报产值初始化
			cn.ccccltd.webservice.other.monthreport.ReturnMessage qtmess = null;
			QtxmzxWs qtxm = (QtxmzxWs)ctx.getBean("qtmonthreportclient");
			qtmess = qtxm.queryMonthReportById(zzjg, jtrecid);
			//其它月报产值保存
			jtcontractrevenueapplyservice.qtMonthReportInit(qtmess.getResultList(),jtrecid,contractrevunueapplyid);
		}
		//产值数据保存到生产经营
		//kettle调用
		String jobpath = KettleUtil.getPropertiesByName("kettle_file.properties", "dictjobpath");
		//kettle执行
		try {
			Map<String, String> paramap = new HashMap<String, String>();
			paramap.put("contractrevunueapplyid",contractrevunueapplyid);
			paramap.put("sendTime",KettleUtil.getDate());
			KettleUtil.runTrans(jobpath, paramap);
			renturnstr = "1";
		} catch (Exception e) {
			renturnstr = "2";// 同步失败
			logger.error(e.getLocalizedMessage());
		}
		return renturnstr;
	}
	
}
