package com.ajie.wechat.controller;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.List;

import org.pentaho.di.core.KettleClientEnvironment;
import org.pentaho.di.core.KettleEnvironment;
import org.pentaho.di.core.exception.KettleException;
import org.pentaho.di.job.Job;
import org.pentaho.di.job.JobMeta;
import org.pentaho.di.trans.Trans;
import org.pentaho.di.trans.TransMeta;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ajie.wechat.dao.CommonDao;
import com.ajie.wechat.model.JTContract;
import com.ajie.wechat.service.JTContractService;

import cn.ccccltd.webservice.construction.contract.GhxmjhtVO;
import cn.ccccltd.webservice.construction.contract.GhxmjhtWs;
import cn.ccccltd.webservice.construction.contract.HwxmbxVO;
import cn.ccccltd.webservice.construction.marketinfo.Ghscgzjzbzb;
import cn.ccccltd.webservice.construction.marketinfo.GhscxxVO;
import cn.ccccltd.webservice.construction.marketinfo.GhscxxWs;
import cn.ccccltd.webservice.construction.projectbaseinfo.GhscgzjzbVO;
import cn.ccccltd.webservice.construction.projectbaseinfo.GhscgzjzbWs;
import cn.ccccltd.webservice.construction.projectbaseinfo.ReturnMessage;
import cn.ccccltd.webservice.design.contract.HwxmbcxxVO;
import cn.ccccltd.webservice.design.contract.SjxmjhtVO;
import cn.ccccltd.webservice.design.contract.SjxmjhtWs;
import cn.ccccltd.webservice.design.marketinfo.SjscgzjzbzbVO;
import cn.ccccltd.webservice.design.marketinfo.SjscxxVO;
import cn.ccccltd.webservice.design.marketinfo.SjscxxWs;
import cn.ccccltd.webservice.design.projectbaseinfo.SjscgzjzbVO;
import cn.ccccltd.webservice.design.projectbaseinfo.SjscgzjzbWs;
import cn.ccccltd.webservice.other.projectbaseinfo.QtlxmVO;
import cn.ccccltd.webservice.other.projectbaseinfo.QtlxmWs;
import net.sf.json.JSONObject;

@Controller
@RequestMapping(value = "/integrate")
public class JtContractIntegrateController {
	
	@Autowired
    private CommonDao commondao;
	@Autowired
	private JTContractService jtservice;
	
	@RequestMapping(value = "/intdata/{recid}/{grouptype}/{datatype}/{actiontype}",method = RequestMethod.GET)
    public @ResponseBody String jtIntegrateAdd(@PathVariable String recid,@PathVariable String grouptype
    		,@PathVariable String datatype,@PathVariable String actiontype){
		ApplicationContext ctx = new ClassPathXmlApplicationContext("classpath:cxf-Security.xml");  
        String resultstr = "";
        //合同信息上报
		if(grouptype.equals("1")){//设计类项目
			if(datatype.equals("base")){//基本信息
				resultstr = sjBaseIntegrate(recid,actiontype,ctx);
			}else if(datatype.equals("market")){//市场信息
				resultstr = sjMarketIntegrate(recid,actiontype,ctx);
			}else if(datatype.equals("contract")){//合同信息
				resultstr = sjContractIntegrate(recid,actiontype,ctx);
			}
		}else if(grouptype.equals("2")){//施工类项目
			if(datatype.equals("base")){//基本信息
				resultstr = sgBaseIntegrate(recid,actiontype,ctx);
			}else if(datatype.equals("market")){//市场信息
				resultstr = sgMarketIntegrate(recid,actiontype,ctx);
			}else if(datatype.equals("contract")){//合同信息
				resultstr = sgContractIntegrate(recid,actiontype,ctx);
			}
		}else if(grouptype.equals("4")){//其它类项目
			resultstr = qtBaseAndContractIntegrate(recid,actiontype,ctx);//其它类基本信息及合同信息
		}
        System.out.println(resultstr);
        return resultstr;
    }
	
	/**
	 * 集团信息查询接口
	 * @param grouptype
	 * @param recid
	 * @param zzjg
	 * @param baserecid
	 * @param contractrecid
	 * @return
	 */
	@RequestMapping(value = "/contractquery/{grouptype}/{recid}/{zzjg}/{baserecid}/{contractrecid}",method = RequestMethod.GET)
    public @ResponseBody String jtIntegrateQuery(@PathVariable String grouptype,@PathVariable String recid
    		,@PathVariable String zzjg,@PathVariable String baserecid,@PathVariable String contractrecid){
		if(grouptype.equals("1")){//设计类基本信息
			
		}else if(grouptype.equals("2")){//施工类基本型
			
		}else if(grouptype.equals("4")){//其它类基本信息
			
		}
		
		
		
		return null;
    }
	
	/**
	 * 施工基本信息接口同步
	 * @param recid
	 * @return
	 */
	private String sgBaseIntegrate(String recid,String actiontype,ApplicationContext ctx){
		GhscgzjzbWs client = (GhscgzjzbWs)ctx.getBean("sgbaseclient");
		System.out.println("recid:"+recid);
		ReturnMessage returnmessage = null;
		if("add".equals(actiontype)){//施工基本信息增加接口
	        String sql = "select * from jt_sg_project_base where recid="+recid;
	        List<GhscgzjzbVO> ghbases = (List<GhscgzjzbVO>) commondao.queryListEntity(sql, null, GhscgzjzbVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	GhscgzjzbVO projectBaseInfo = ghbases.get(0);
	        	System.out.println("stdname:"+projectBaseInfo.getStdname());
	        	returnmessage = client.addBaseInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
	        
		}else if("update".equals(actiontype)){//施工基本信息更新接口
			String sql = "select * from jt_sg_project_base where recid="+recid;
	        List<GhscgzjzbVO> ghbases = (List<GhscgzjzbVO>) commondao.queryListEntity(sql, null, GhscgzjzbVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	GhscgzjzbVO projectBaseInfo = ghbases.get(0);
	        	System.out.println("stdname:"+projectBaseInfo.getStdname());
	        	returnmessage = client.updateBaseInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
		}
		
		JSONObject jsonObject = JSONObject.fromObject(returnmessage);
		String resultstr = "";
        try {
        	resultstr = URLEncoder.encode(jsonObject.toString(),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return resultstr;
	}
	
	/**
	 * 施工市场信息接口同步
	 * @param recid
	 * @return
	 */
	private String sgMarketIntegrate(String recid,String actiontype,ApplicationContext ctx){
		GhscxxWs client = (GhscxxWs)ctx.getBean("sgmarketclient");
		System.out.println("recid:"+recid);
		cn.ccccltd.webservice.construction.marketinfo.ReturnMessage returnmessage = null;
		//查询市场信息关联的其它投标信息
		String qitbsql = "select * from jt_other_company_bid where baserecid="+recid;
    	List<Ghscgzjzbzb> zbzbs = (List<Ghscgzjzbzb>) commondao.queryListEntity(qitbsql, null, Ghscgzjzbzb.class);
		
		if("add".equals(actiontype)){//施工市场信息增加接口
	        String sql = "select * from jt_sg_project_track where sgtrackid="+recid;
	        List<GhscxxVO> ghbases = (List<GhscxxVO>) commondao.queryListEntity(sql, null, GhscxxVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	GhscxxVO projectMarketInfo = ghbases.get(0);
	        	if(zbzbs != null && zbzbs.size()>0){
	        		projectMarketInfo.setOtherBidList(zbzbs);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectMarketInfo.getKsgzsj() != null && !"".equals(projectMarketInfo.getKsgzsj())){
	        			projectMarketInfo.setKsgzsj(dateUtil(format.format(format1.parse(projectMarketInfo.getKsgzsj()))));
	        		}
	        		if(projectMarketInfo.getZsrq() != null && !"".equals(projectMarketInfo.getZsrq())){
	        			projectMarketInfo.setZsrq(dateUtil(format.format(format1.parse(projectMarketInfo.getZsrq()))));
	        		}
	        		if(projectMarketInfo.getZbrqi() != null && !"".equals(projectMarketInfo.getZbrqi())){
	        			projectMarketInfo.setZbrqi(dateUtil(format.format(format1.parse(projectMarketInfo.getZbrqi()))));
	        		}
	        		if(projectMarketInfo.getZbjzrq() != null && !"".equals(projectMarketInfo.getZbjzrq())){
	        			projectMarketInfo.setZbjzrq(dateUtil(format.format(format1.parse(projectMarketInfo.getZbjzrq()))));
	        		}
	        		if(projectMarketInfo.getTbrq() != null && !"".equals(projectMarketInfo.getTbrq())){
	        			projectMarketInfo.setTbrq(dateUtil(format.format(format1.parse(projectMarketInfo.getTbrq()))));
	        		}
	        		if(projectMarketInfo.getZbrq() != null && !"".equals(projectMarketInfo.getZbrq())){
	        			projectMarketInfo.setZbrq(dateUtil(format.format(format1.parse(projectMarketInfo.getZbrq()))));
	        		}
	        	} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	returnmessage = client.addMarketInfo(projectMarketInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
	        
		}else if("update".equals(actiontype)){//施工市场信息更新接口
			String sql = "select * from jt_sg_project_track where sgtrackid="+recid;
	        List<GhscxxVO> ghbases = (List<GhscxxVO>) commondao.queryListEntity(sql, null, GhscxxVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	GhscxxVO projectMarketInfo = ghbases.get(0);
	        	if(zbzbs != null && zbzbs.size()>0){
	        		projectMarketInfo.setOtherBidList(zbzbs);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectMarketInfo.getKsgzsj() != null && !"".equals(projectMarketInfo.getKsgzsj())){
	        			projectMarketInfo.setKsgzsj(dateUtil(format.format(format1.parse(projectMarketInfo.getKsgzsj()))));
	        		}
	        		if(projectMarketInfo.getZsrq() != null && !"".equals(projectMarketInfo.getZsrq())){
	        			projectMarketInfo.setZsrq(dateUtil(format.format(format1.parse(projectMarketInfo.getZsrq()))));
	        		}
	        		if(projectMarketInfo.getZbrqi() != null && !"".equals(projectMarketInfo.getZbrqi())){
	        			projectMarketInfo.setZbrqi(dateUtil(format.format(format1.parse(projectMarketInfo.getZbrqi()))));
	        		}
	        		if(projectMarketInfo.getZbjzrq() != null && !"".equals(projectMarketInfo.getZbjzrq())){
	        			projectMarketInfo.setZbjzrq(dateUtil(format.format(format1.parse(projectMarketInfo.getZbjzrq()))));
	        		}
	        		if(projectMarketInfo.getTbrq() != null && !"".equals(projectMarketInfo.getTbrq())){
	        			projectMarketInfo.setTbrq(dateUtil(format.format(format1.parse(projectMarketInfo.getTbrq()))));
	        		}
	        		if(projectMarketInfo.getZbrq() != null && !"".equals(projectMarketInfo.getZbrq())){
	        			projectMarketInfo.setZbrq(dateUtil(format.format(format1.parse(projectMarketInfo.getZbrq()))));
	        		}
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	
	        	returnmessage = client.updateMarketInfo(projectMarketInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
		}
		
		JSONObject jsonObject = JSONObject.fromObject(returnmessage);
		String resultstr = "";
        try {
        	resultstr = URLEncoder.encode(jsonObject.toString(),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return resultstr;
	}
	
	/**
	 * 施工合同信息接口同步
	 * @param recid
	 * @return
	 */
	private String sgContractIntegrate(String recid,String actiontype,ApplicationContext ctx){
		GhxmjhtWs client = (GhxmjhtWs)ctx.getBean("sgcontractclient");
		System.out.println("recid:"+recid);
		cn.ccccltd.webservice.construction.contract.ReturnMessage returnmessage = null;
		//设置合同关联的保险信息
    	String bxsql = "select * from jt_project_insurance where baserecid="+recid;
    	List<HwxmbxVO> bxList = (List<HwxmbxVO>) commondao.queryListEntity(bxsql, null, HwxmbxVO.class);
		
		if("add".equals(actiontype)){//施工合同信息增加接口
	        String sql = "select * from jt_sg_project_contract where sgcontractid="+recid;
	        List<GhxmjhtVO> ghbases = (List<GhxmjhtVO>) commondao.queryListEntity(sql, null, GhxmjhtVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	GhxmjhtVO projectBaseInfo = ghbases.get(0);
	        	System.out.println("*****************"+projectBaseInfo.getHtqdrq());
	        	if(bxList != null && bxList.size()>0){
	        		projectBaseInfo.setBxList(bxList);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getSjkgrq() != null && !"".equals(projectBaseInfo.getSjkgrq())){
	        			projectBaseInfo.setSjkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjkgrq()))));
	        		}
	        		if(projectBaseInfo.getHtqdrq() != null && !"".equals(projectBaseInfo.getHtqdrq())){
	        			projectBaseInfo.setHtqdrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtqdrq()))));
	        		}
	        		if(projectBaseInfo.getHtkgrq() != null && !"".equals(projectBaseInfo.getHtkgrq())){
	        			projectBaseInfo.setHtkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtkgrq()))));
	        		}
	        		if(projectBaseInfo.getHtjgrq() != null && !"".equals(projectBaseInfo.getHtjgrq())){
	        			projectBaseInfo.setHtjgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtjgrq()))));
	        		}
	        		if(projectBaseInfo.getTjgsyf() != null && !"".equals(projectBaseInfo.getTjgsyf())){
	        			projectBaseInfo.setTjgsyf(dateUtil(format.format(format1.parse(projectBaseInfo.getTjgsyf()))));
	        		}
		        	System.out.println("*****************"+projectBaseInfo.getHtqdrq());
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	//调用施工合同信息增加接口
	        	returnmessage = client.addContractInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
	        
		}else if("update".equals(actiontype)){//施工合同信息更新接口
			String sql = "select * from jt_sg_project_contract where sgcontractid="+recid;
	        List<GhxmjhtVO> ghbases = (List<GhxmjhtVO>) commondao.queryListEntity(sql, null, GhxmjhtVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	GhxmjhtVO projectBaseInfo = ghbases.get(0);
	        	if(bxList != null && bxList.size()>0){
	        		projectBaseInfo.setBxList(bxList);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getSjkgrq() != null && !"".equals(projectBaseInfo.getSjkgrq())){
	        			projectBaseInfo.setSjkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjkgrq()))));
	        		}
	        		if(projectBaseInfo.getHtqdrq() != null && !"".equals(projectBaseInfo.getHtqdrq())){
	        			projectBaseInfo.setHtqdrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtqdrq()))));
	        		}
	        		if(projectBaseInfo.getHtkgrq() != null && !"".equals(projectBaseInfo.getHtkgrq())){
	        			projectBaseInfo.setHtkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtkgrq()))));
	        		}
	        		if(projectBaseInfo.getHtjgrq() != null && !"".equals(projectBaseInfo.getHtjgrq())){
	        			projectBaseInfo.setHtjgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtjgrq()))));
	        		}
	        		if(projectBaseInfo.getTjgsyf() != null && !"".equals(projectBaseInfo.getTjgsyf())){
	        			projectBaseInfo.setTjgsyf(dateUtil(format.format(format1.parse(projectBaseInfo.getTjgsyf()))));
	        		}
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	//调用施工合同信息更新接口
	        	returnmessage = client.updateContractInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
		}
		
		JSONObject jsonObject = JSONObject.fromObject(returnmessage);
		String resultstr = "";
        try {
        	resultstr = URLEncoder.encode(jsonObject.toString(),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return resultstr;
	}
	
	/**
	 * 设计基本信息接口同步
	 * @param recid
	 * @return
	 */
	private String sjBaseIntegrate(String recid,String actiontype,ApplicationContext ctx){
		SjscgzjzbWs client = (SjscgzjzbWs)ctx.getBean("sjbaseclient");
		System.out.println("recid:"+recid);
		cn.ccccltd.webservice.design.projectbaseinfo.ReturnMessage returnmessage = null;
		if("add".equals(actiontype)){//设计基本信息增加接口
	        String sql = "select * from jt_sj_project_base where recid="+recid;
	        List<SjscgzjzbVO> ghbases = (List<SjscgzjzbVO>) commondao.queryListEntity(sql, null, SjscgzjzbVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	SjscgzjzbVO projectBaseInfo = ghbases.get(0);
	        	returnmessage = client.addBaseInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
	        
		}else if("update".equals(actiontype)){//设计基本信息更新接口
			String sql = "select * from jt_sj_project_base where recid="+recid;
	        List<SjscgzjzbVO> ghbases = (List<SjscgzjzbVO>) commondao.queryListEntity(sql, null, SjscgzjzbVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	SjscgzjzbVO projectBaseInfo = ghbases.get(0);
	        	returnmessage = client.updateBaseInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
		}
		
		JSONObject jsonObject = JSONObject.fromObject(returnmessage);
		String resultstr = "";
        try {
        	resultstr = URLEncoder.encode(jsonObject.toString(),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return resultstr;
	}
	
	/**
	 * 设计市场信息接口同步
	 * @param recid
	 * @return
	 */
	private String sjMarketIntegrate(String recid,String actiontype,ApplicationContext ctx){
		SjscxxWs client = (SjscxxWs)ctx.getBean("sjmarketclient");
		System.out.println("recid:"+recid);
		cn.ccccltd.webservice.design.marketinfo.ReturnMessage returnmessage = null;
		//查询设计市场信息关联的其它投标信息
		String qitbsql = "select * from jt_other_company_bid where baserecid="+recid;
		List<SjscgzjzbzbVO> zbzbs = (List<SjscgzjzbzbVO>) commondao.queryListEntity(qitbsql, null, SjscgzjzbzbVO.class);
		
		if("add".equals(actiontype)){//设计市场信息增加接口
	        String sql = "select * from jt_sj_project_track where trackid="+recid;
	        List<SjscxxVO> ghbases = (List<SjscxxVO>) commondao.queryListEntity(sql, null, SjscxxVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	SjscxxVO projectBaseInfo = ghbases.get(0);
	        	if(zbzbs != null && zbzbs.size()>0){
	        		projectBaseInfo.setSjscgzjzbzbvos(zbzbs);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getKsgzsj() != null && !"".equals(projectBaseInfo.getKsgzsj())){
	        			projectBaseInfo.setKsgzsj(dateUtil(format.format(format1.parse(projectBaseInfo.getKsgzsj()))));
	        		}
	        		if(projectBaseInfo.getTbrq() != null && !"".equals(projectBaseInfo.getTbrq())){
	        			projectBaseInfo.setTbrq(dateUtil(format.format(format1.parse(projectBaseInfo.getTbrq()))));
	        		}
	        		if(projectBaseInfo.getNrxtglsjZb() != null && !"".equals(projectBaseInfo.getNrxtglsjZb())){
	        			projectBaseInfo.setNrxtglsjZb(dateUtil(format.format(format1.parse(projectBaseInfo.getNrxtglsjZb()))));
	        		}
					
		        	
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	
	        	returnmessage = client.addMarketInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
	        
		}else if("update".equals(actiontype)){//设计市场信息更新接口
			String sql = "select * from jt_sj_project_track where trackid="+recid;
	        List<SjscxxVO> ghbases = (List<SjscxxVO>) commondao.queryListEntity(sql, null, SjscxxVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	SjscxxVO projectBaseInfo = ghbases.get(0);
	        	if(zbzbs != null && zbzbs.size()>0){
	        		projectBaseInfo.setSjscgzjzbzbvos(zbzbs);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getKsgzsj() != null && !"".equals(projectBaseInfo.getKsgzsj())){
	        			projectBaseInfo.setKsgzsj(dateUtil(format.format(format1.parse(projectBaseInfo.getKsgzsj()))));
	        		}
	        		if(projectBaseInfo.getTbrq() != null && !"".equals(projectBaseInfo.getTbrq())){
	        			projectBaseInfo.setTbrq(dateUtil(format.format(format1.parse(projectBaseInfo.getTbrq()))));
	        		}
	        		if(projectBaseInfo.getNrxtglsjZb() != null && !"".equals(projectBaseInfo.getNrxtglsjZb())){
	        			projectBaseInfo.setNrxtglsjZb(dateUtil(format.format(format1.parse(projectBaseInfo.getNrxtglsjZb()))));
	        		}
				} catch (Exception e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
	        	
	        	returnmessage = client.updateMarketInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
		}
		
		JSONObject jsonObject = JSONObject.fromObject(returnmessage);
		String resultstr = "";
        try {
        	resultstr = URLEncoder.encode(jsonObject.toString(),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return resultstr;
	}
	
	public static void main(String[] args) {
//		String str = "2016-02-02";
//		DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
//    	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
//    	JtContractIntegrateController aa = new JtContractIntegrateController();
//    	
//    	try {
//			System.out.println(aa.dateUtil(format.format(format1.parse(str))));
//		} catch (Exception e) {
//			e.printStackTrace();
//		}
    	
		runJob("D:\\kettle\\scjy_data_syc\\syncContract_add\\sg\\sg.kjb");
		
//		try {
//			runTrans("D:\\kettle\\scjy_data_syc\\syncContract_add\\sg\\sg_trans.ktr");
//		} catch (KettleException e) {
//			e.printStackTrace();
//		}
	}
	
	public static void runJob(String jobname){
		try {   
			KettleClientEnvironment.init();   
			//jobname 是Job脚本的路径及名称   
			JobMeta jobMeta = new JobMeta(jobname, null);   
			Job job = new Job(null, jobMeta);   
			//向Job 脚本传递参数，脚本中获取参数值：${参数名}   
//			job.setVariable("data", "207881");
			String[] params = {"1483"};
			job.setArguments(params);
//			job.setParameterValue("data", "207881");
			job.start();   
			job.waitUntilFinished();   
			if (job.getErrors() > 0) {   
				throw new Exception("There are errors during job exception!(执行job发生异常)");  
			}   
		} catch (Exception e) {   
			e.printStackTrace();
		}  
	}
	
	public static void runTrans(String transFileName) throws KettleException{
		// 初始化  
		KettleEnvironment.init();  
	    // 转换元对象  
	    TransMeta transMeta = new TransMeta(transFileName);  
	    // 转换  
	    Trans trans = new Trans(transMeta);  
	    String[] params = {"1483"}; // 传递参数  
	    // 执行转换  
	    trans.execute(params);  
	    // 等待转换执行结束  
	    trans.waitUntilFinished(); 
	}
	
	
	/**
	 * 设计合同信息接口同步
	 * @param recid
	 * @return
	 */
	private String sjContractIntegrate(String recid,String actiontype,ApplicationContext ctx){
		SjxmjhtWs client = (SjxmjhtWs)ctx.getBean("sjcontractclient");
		System.out.println("recid:"+recid);
		cn.ccccltd.webservice.design.contract.ReturnMessage returnmessage = null;
		//设置合同关联的保险信息
    	String bxsql = "select * from jt_project_insurance where baserecid="+recid;
    	List<HwxmbcxxVO> bxList = (List<HwxmbcxxVO>) commondao.queryListEntity(bxsql, null, HwxmbcxxVO.class);
    	
		if("add".equals(actiontype)){//设计合同信息增加接口
	        String sql = "select * from jt_sj_project_contract where sj_contract_id="+recid;
	        List<SjxmjhtVO> ghbases = (List<SjxmjhtVO>) commondao.queryListEntity(sql, null, SjxmjhtVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	SjxmjhtVO projectBaseInfo = ghbases.get(0);
	        	if(bxList != null && bxList.size()>0){
	        		projectBaseInfo.setBxList(bxList);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getSjwgrq() != null && !"".equals(projectBaseInfo.getSjwgrq())){
	        			projectBaseInfo.setSjwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjwgrq()))));
	        		}
	        		if(projectBaseInfo.getSjkgrq() != null && !"".equals(projectBaseInfo.getSjkgrq())){
	        			projectBaseInfo.setSjkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjkgrq()))));
	        		}
					if(projectBaseInfo.getTjgsyf() != null && !"".equals(projectBaseInfo.getTjgsyf())){
						projectBaseInfo.setTjgsyf(dateUtil(format.format(format1.parse(projectBaseInfo.getTjgsyf()))));        			
					}
					if(projectBaseInfo.getHtqdrq() != null && !"".equals(projectBaseInfo.getHtqdrq())){
						projectBaseInfo.setHtqdrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtqdrq()))));
					}
					if(projectBaseInfo.getHtkgrq() != null && !"".equals(projectBaseInfo.getHtkgrq())){
						projectBaseInfo.setHtkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtkgrq()))));
					}
					if(projectBaseInfo.getHtwgrq() != null && !"".equals(projectBaseInfo.getHtwgrq())){
						projectBaseInfo.setHtwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtwgrq()))));
					}
		        	
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	returnmessage = client.addContractInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
	        
		}else if("update".equals(actiontype)){//设计合同信息更新接口
			String sql = "select * from jt_sj_project_contract where sj_contract_id="+recid;
	        List<SjxmjhtVO> ghbases = (List<SjxmjhtVO>) commondao.queryListEntity(sql, null, SjxmjhtVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	SjxmjhtVO projectBaseInfo = ghbases.get(0);
	        	if(bxList != null && bxList.size()>0){
	        		projectBaseInfo.setBxList(bxList);
	        	}
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getSjwgrq() != null && !"".equals(projectBaseInfo.getSjwgrq())){
	        			projectBaseInfo.setSjwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjwgrq()))));
	        		}
	        		if(projectBaseInfo.getSjkgrq() != null && !"".equals(projectBaseInfo.getSjkgrq())){
	        			projectBaseInfo.setSjkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjkgrq()))));
	        		}
					if(projectBaseInfo.getTjgsyf() != null && !"".equals(projectBaseInfo.getTjgsyf())){
						projectBaseInfo.setTjgsyf(dateUtil(format.format(format1.parse(projectBaseInfo.getTjgsyf()))));        			
					}
					if(projectBaseInfo.getHtqdrq() != null && !"".equals(projectBaseInfo.getHtqdrq())){
						projectBaseInfo.setHtqdrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtqdrq()))));
					}
					if(projectBaseInfo.getHtkgrq() != null && !"".equals(projectBaseInfo.getHtkgrq())){
						projectBaseInfo.setHtkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtkgrq()))));
					}
					if(projectBaseInfo.getHtwgrq() != null && !"".equals(projectBaseInfo.getHtwgrq())){
						projectBaseInfo.setHtwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtwgrq()))));
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	returnmessage = client.updateContractInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
		}
		
		JSONObject jsonObject = JSONObject.fromObject(returnmessage);
		String resultstr = "";
        try {
        	resultstr = URLEncoder.encode(jsonObject.toString(),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return resultstr;
	}
	
	/**
	 * 其它基本信息及合同信息接口同步
	 * @param recid
	 * @return
	 */
	private String qtBaseAndContractIntegrate(String recid,String actiontype,ApplicationContext ctx){
		QtlxmWs client = (QtlxmWs)ctx.getBean("qtbasecontractclient");
		System.out.println("recid:"+recid);
		cn.ccccltd.webservice.other.projectbaseinfo.ReturnMessage returnmessage = null;
		if("add".equals(actiontype)){//设计基本信息增加接口
	        String sql = "select * from jt_qt_projectandcontract where otherid="+recid;
	        List<QtlxmVO> ghbases = (List<QtlxmVO>) commondao.queryListEntity(sql, null, QtlxmVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	QtlxmVO projectBaseInfo = ghbases.get(0);
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getSjwgrq() != null && !"".equals(projectBaseInfo.getSjwgrq())){
	        			projectBaseInfo.setSjwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjwgrq()))));
	        		}
	        		if(projectBaseInfo.getSjkgrq() != null && !"".equals(projectBaseInfo.getSjkgrq())){
	        			projectBaseInfo.setSjkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjkgrq()))));
	        		}
					if(projectBaseInfo.getHtqdrq() != null && !"".equals(projectBaseInfo.getHtqdrq())){
						projectBaseInfo.setHtqdrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtqdrq()))));
					}
					if(projectBaseInfo.getHtkgrq() != null && !"".equals(projectBaseInfo.getHtkgrq())){
						projectBaseInfo.setHtkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtkgrq()))));
					}
					if(projectBaseInfo.getHtwgrq() != null && !"".equals(projectBaseInfo.getHtwgrq())){
						projectBaseInfo.setHtwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtwgrq()))));
					}
		        	
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	
	        	returnmessage = client.addBaseInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
	        
		}else if("update".equals(actiontype)){//设计基本信息更新接口
			String sql = "select * from jt_qt_projectandcontract where otherid="+recid;
	        List<QtlxmVO> ghbases = (List<QtlxmVO>) commondao.queryListEntity(sql, null, QtlxmVO.class);
	        if(ghbases != null && ghbases.size()>0){
	        	QtlxmVO projectBaseInfo = ghbases.get(0);
	        	//日期格式转换
	        	DateFormat format1= new SimpleDateFormat("yyyy-MM-dd");
	        	DateFormat format= new SimpleDateFormat("dd-MM月-yy hh.mm.ss.SSSS a");
	        	try {
	        		if(projectBaseInfo.getSjwgrq() != null && !"".equals(projectBaseInfo.getSjwgrq())){
	        			projectBaseInfo.setSjwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjwgrq()))));
	        		}
	        		if(projectBaseInfo.getSjkgrq() != null && !"".equals(projectBaseInfo.getSjkgrq())){
	        			projectBaseInfo.setSjkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getSjkgrq()))));
	        		}
					if(projectBaseInfo.getHtqdrq() != null && !"".equals(projectBaseInfo.getHtqdrq())){
						projectBaseInfo.setHtqdrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtqdrq()))));
					}
					if(projectBaseInfo.getHtkgrq() != null && !"".equals(projectBaseInfo.getHtkgrq())){
						projectBaseInfo.setHtkgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtkgrq()))));
					}
					if(projectBaseInfo.getHtwgrq() != null && !"".equals(projectBaseInfo.getHtwgrq())){
						projectBaseInfo.setHtwgrq(dateUtil(format.format(format1.parse(projectBaseInfo.getHtwgrq()))));
					}
		        	
				} catch (Exception e) {
					e.printStackTrace();
				}
	        	returnmessage = client.updateBaseInfo(projectBaseInfo);
	            System.out.println("message:"+returnmessage.getMessage());
	            System.out.println("statuscod:"+returnmessage.getStatusCode());
	            System.out.println("resultlist:"+returnmessage.getResultList());
	        }
		}
		
		JSONObject jsonObject = JSONObject.fromObject(returnmessage);
		String resultstr = "";
        try {
        	resultstr = URLEncoder.encode(jsonObject.toString(),"UTF-8");
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		}
        return resultstr;
	}
	
	private String dateUtil(String datestr){
		String month = Integer.parseInt(datestr.substring(3, 5))+"";
		
		StringBuffer sb = new StringBuffer();
		sb.append(datestr.substring(0,3));
		sb.append(month);
		sb.append(datestr.substring(5,26));
		String datestrresult = sb.toString();
		
		return datestrresult;
	}
	
	@RequestMapping(value = "/savejtcontract",method = RequestMethod.GET)
	public void savejtcontract(){
		JTContract jt = new JTContract();
		jt.setContractid(2345);
		jt.setContractcode("hhYYYII-00");
		jtservice.add(jt);
	}
}
